//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   int4 EmitterSpawnInfoOffsets[2];   // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint SpawnedInstances;             // Offset:  320 Size:     4
//   uint UpdateStartInstance;          // Offset:  324 Size:     4
//   int DefaultSimulationStageIndex;   // Offset:  328 Size:     4 [unused]
//   int SimulationStageIndex;          // Offset:  332 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  336 Size:     4 [unused]
//   uint ComponentBufferSizeRead;      // Offset:  340 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  344 Size:     4
//   int NumEventsPerParticle;          // Offset:  348 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  352 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  356 Size:     4 [unused]
//   uint SimStart;                     // Offset:  360 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  364 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  368 Size:     4
//   float MinTime_Emitter_Value_ScaleRGB_FloatCurve;// Offset:  372 Size:     4
//   float MaxTime_Emitter_Value_ScaleRGB_FloatCurve;// Offset:  376 Size:     4 [unused]
//   float InvTimeRange_Emitter_Value_ScaleRGB_FloatCurve;// Offset:  380 Size:     4
//   float CurveLUTNumMinusOne_Emitter_Value_ScaleRGB_FloatCurve;// Offset:  384 Size:     4
//   float MinTime_Emitter_ScaleAlpha_FloatCurve;// Offset:  388 Size:     4
//   float MaxTime_Emitter_ScaleAlpha_FloatCurve;// Offset:  392 Size:     4 [unused]
//   float InvTimeRange_Emitter_ScaleAlpha_FloatCurve;// Offset:  396 Size:     4
//   float CurveLUTNumMinusOne_Emitter_ScaleAlpha_FloatCurve;// Offset:  400 Size:     4
//
// }
//
// cbuffer FNiagaraGlobalParameters
// {
//
//   float Engine_DeltaTime;            // Offset:    0 Size:     4
//   float Engine_InverseDeltaTime;     // Offset:    4 Size:     4
//   float Engine_Time;                 // Offset:    8 Size:     4 [unused]
//   float Engine_RealTime;             // Offset:   12 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraOwnerParameters
// {
//
//   row_major float4x4 Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64
//   row_major float4x4 Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 Engine_Owner_Rotation;      // Offset:  384 Size:    16 [unused]
//   float4 Engine_Owner_Position;      // Offset:  400 Size:    16
//   float4 Engine_Owner_Velocity;      // Offset:  416 Size:    16 [unused]
//   float4 Engine_Owner_SystemXAxis;   // Offset:  432 Size:    16 [unused]
//   float4 Engine_Owner_SystemYAxis;   // Offset:  448 Size:    16 [unused]
//   float4 Engine_Owner_SystemZAxis;   // Offset:  464 Size:    16 [unused]
//   float4 Engine_Owner_Scale;         // Offset:  480 Size:    16 [unused]
//
// }
//
// cbuffer FNiagaraEmitterParameters
// {
//
//   int Engine_Emitter_NumParticles;   // Offset:    0 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:    4 Size:     4
//   float Engine_Emitter_SpawnCountScale;// Offset:    8 Size:     4 [unused]
//   float Emitter_Age;                 // Offset:   12 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   16 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_0; // Offset:   20 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_1; // Offset:   24 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_2; // Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraExternalParameters
// {
//
//   float Constants_Emitter_UniformRangedFloat003_Minimum;// Offset:    0 Size:     4
//   float Constants_Emitter_UniformRangedFloat003_Maximum;// Offset:    4 Size:     4
//   int Constants_Emitter_UniformRangedFloat003_RandomSeed;// Offset:    8 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat_Minimum;// Offset:   12 Size:     4
//   float Constants_Emitter_UniformRangedFloat_Maximum;// Offset:   16 Size:     4
//   int Constants_Emitter_UniformRangedFloat_RandomSeed;// Offset:   20 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat001_Minimum;// Offset:   24 Size:     4
//   float Constants_Emitter_UniformRangedFloat001_Maximum;// Offset:   28 Size:     4
//   int Constants_Emitter_UniformRangedFloat001_RandomSeed;// Offset:   32 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_Color;// Offset:   48 Size:    16 [unused]
//   float Constants_Emitter_InitializeParticle_Mass;// Offset:   64 Size:     4
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   80 Size:    16 [unused]
//   float Constants_Emitter_VectorFromFloat_Value;// Offset:   96 Size:     4
//   float Constants_Emitter_MakeFloat4FromVectorAndFloat_FloatASC40AlphaASC41;// Offset:  100 Size:     4
//   float4 User_BloodColor;            // Offset:  112 Size:    16
//   float4 Constants_Emitter_Color_ScaleColor;// Offset:  128 Size:    16
//   float Constants_Emitter_Color_ScaleAlpha;// Offset:  144 Size:     4
//   float Emitter_AlphaScale;          // Offset:  148 Size:     4
//   float4 Constants_Emitter_UniformRangedVector_Minimum;// Offset:  160 Size:    16
//   float4 Constants_Emitter_UniformRangedVector_Maximum;// Offset:  176 Size:    16
//   int Constants_Emitter_UniformRangedVector_RandomSeed;// Offset:  192 Size:     4 [unused]
//   float4 Constants_Emitter_AddVelocity_ScaleAddedVelocity;// Offset:  208 Size:    16
//   float Constants_Emitter_Drag_Drag; // Offset:  224 Size:     4
//   float Constants_Emitter_Drag_RotationalDrag;// Offset:  228 Size:     4 [unused]
//   float4 Constants_Emitter_AccelerationForce_Acceleration;// Offset:  240 Size:    16
//   float Constants_Emitter_FloatFromCurve_ScaleCurve;// Offset:  256 Size:     4
//   float Constants_Emitter_FloatFromCurve001_ScaleCurve;// Offset:  260 Size:     4
//   float Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  264 Size:     4 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  268 Size:     4 [unused]
//   float Constants_Emitter_Lerp_Float_A;// Offset:  272 Size:     4
//   float Constants_Emitter_Lerp_Float_B;// Offset:  276 Size:     4
//   float Emitter_SpawnRate;           // Offset:  280 Size:     4 [unused]
//
// }
//
// cbuffer PREV_FNiagaraOwnerParameters
// {
//
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 PREV_Engine_Owner_Rotation; // Offset:  384 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Position; // Offset:  400 Size:    16
//   float4 PREV_Engine_Owner_Velocity; // Offset:  416 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemXAxis;// Offset:  432 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemYAxis;// Offset:  448 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemZAxis;// Offset:  464 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Scale;    // Offset:  480 Size:    16 [unused]
//
// }
//
// cbuffer PREV_FNiagaraExternalParameters
// {
//
//   float PREV_Constants_Emitter_UniformRangedFloat003_Minimum;// Offset:    0 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat003_Maximum;// Offset:    4 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat003_RandomSeed;// Offset:    8 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat_Minimum;// Offset:   12 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat_Maximum;// Offset:   16 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat_RandomSeed;// Offset:   20 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat001_Minimum;// Offset:   24 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat001_Maximum;// Offset:   28 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat001_RandomSeed;// Offset:   32 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_Color;// Offset:   48 Size:    16 [unused]
//   float PREV_Constants_Emitter_InitializeParticle_Mass;// Offset:   64 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_MeshScale;// Offset:   80 Size:    16 [unused]
//   float PREV_Constants_Emitter_VectorFromFloat_Value;// Offset:   96 Size:     4 [unused]
//   float PREV_Constants_Emitter_MakeFloat4FromVectorAndFloat_FloatASC40AlphaASC41;// Offset:  100 Size:     4 [unused]
//   float4 PREV_User_BloodColor;       // Offset:  112 Size:    16
//   float4 PREV_Constants_Emitter_Color_ScaleColor;// Offset:  128 Size:    16 [unused]
//   float PREV_Constants_Emitter_Color_ScaleAlpha;// Offset:  144 Size:     4 [unused]
//   float PREV_Emitter_AlphaScale;     // Offset:  148 Size:     4
//   float4 PREV_Constants_Emitter_UniformRangedVector_Minimum;// Offset:  160 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_UniformRangedVector_Maximum;// Offset:  176 Size:    16 [unused]
//   int PREV_Constants_Emitter_UniformRangedVector_RandomSeed;// Offset:  192 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_AddVelocity_ScaleAddedVelocity;// Offset:  208 Size:    16 [unused]
//   float PREV_Constants_Emitter_Drag_Drag;// Offset:  224 Size:     4 [unused]
//   float PREV_Constants_Emitter_Drag_RotationalDrag;// Offset:  228 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_AccelerationForce_Acceleration;// Offset:  240 Size:    16 [unused]
//   float PREV_Constants_Emitter_FloatFromCurve_ScaleCurve;// Offset:  256 Size:     4 [unused]
//   float PREV_Constants_Emitter_FloatFromCurve001_ScaleCurve;// Offset:  260 Size:     4 [unused]
//   float PREV_Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  264 Size:     4 [unused]
//   float PREV_Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  268 Size:     4 [unused]
//   float PREV_Constants_Emitter_Lerp_Float_A;// Offset:  272 Size:     4 [unused]
//   float PREV_Constants_Emitter_Lerp_Float_B;// Offset:  276 Size:     4 [unused]
//   float PREV_Emitter_SpawnRate;      // Offset:  280 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// CurveLUT_Emitter_Value_ScaleRGB_FloatCurve    texture   float         buf             t2      1 
// CurveLUT_Emitter_ScaleAlpha_FloatCurve    texture   float         buf             t3      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FNiagaraGlobalParameters          cbuffer      NA          NA            cb1      1 
// FNiagaraOwnerParameters           cbuffer      NA          NA            cb2      1 
// FNiagaraEmitterParameters         cbuffer      NA          NA            cb3      1 
// FNiagaraExternalParameters        cbuffer      NA          NA            cb4      1 
// PREV_FNiagaraOwnerParameters      cbuffer      NA          NA            cb5      1 
// PREV_FNiagaraExternalParameters    cbuffer      NA          NA            cb6      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], dynamicIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[26], immediateIndexed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_constantbuffer CB4[18], immediateIndexed
dcl_constantbuffer CB5[26], immediateIndexed
dcl_constantbuffer CB6[10], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadIDInGroup.x
dcl_input vThreadID.x
dcl_temps 14
dcl_tgsm_structured g0, 4, 32
dcl_tgsm_structured g1, 4, 8
dcl_tgsm_structured g2, 4, 2
dcl_tgsm_raw g3, 4
dcl_thread_group 32, 1, 1
iadd r0.x, vThreadID.x, cb0[20].y
ieq r0.y, cb0[22].w, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].wwww, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r0.z, r0.y, cb0[20].x
iadd r0.z, r0.z, cb0[20].y
ult r0.zw, r0.xxxx, r0.zzzy
and r0.w, r0.z, r0.w
if_nz r0.w
  ld_indexable(buffer)(float,float,float,float) r0.w, r0.xxxx, t0.yzwx
  imad r1.xyzw, l(5, 6, 7, 9), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r2.x, r1.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r2.y, r1.yyyy, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r2.z, r1.zzzz, t0.yzxw
  ishl r1.xy, cb0[21].yyyy, l(3, 4, 0, 0)
  iadd r1.xy, r0.xxxx, r1.xyxx
  ld_indexable(buffer)(float,float,float,float) r2.w, r1.xxxx, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r1.x, r1.wwww, t0.xyzw
  imad r3.xyzw, l(10, 11, 12, 14), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r1.z, r3.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r1.w, r3.yyyy, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r3.x, r3.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.y, r3.wwww, t0.wxyz
  imad r4.xyzw, l(15, 20, 21, 22), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r3.z, r4.xxxx, t0.wyxz
  ld_indexable(buffer)(float,float,float,float) r3.w, r1.yyyy, t0.wyzx
  ld_indexable(buffer)(float,float,float,float) r1.y, r4.yyyy, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r4.x, r4.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r4.y, r4.wwww, t0.yxzw
  imad r5.xyzw, l(23, 24, 25, 26), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r4.z, r5.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r4.w, r5.yyyy, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r5.x, r5.zzzz, t0.xyzw
  ld_indexable(buffer)(sint,sint,sint,sint) r5.y, r0.xxxx, t1.yxzw
  ld_indexable(buffer)(float,float,float,float) r6.x, r5.wwww, t0.xyzw
  imad r5.zw, l(0, 0, 27, 28), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r6.y, r5.zzzz, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r6.z, r5.wwww, t0.yzxw
  add r0.w, r0.w, cb1[0].x
  max r5.z, r1.z, l(0.000010)
  add r5.w, r5.z, l(-0.000100)
  lt r5.w, r0.w, r5.w
  div r5.z, r0.w, r5.z
  add r6.w, r5.z, -cb0[23].y
  mul_sat r6.w, r6.w, cb0[23].w
  mul r7.x, r6.w, cb0[24].x
  round_ni r7.x, r7.x
  lt r7.y, r7.x, cb0[24].x
  add r7.z, r7.x, l(1.000000)
  movc r7.y, r7.y, r7.z, r7.x
  mad r6.w, r6.w, cb0[24].x, -r7.x
  ftou r7.x, r7.x
  ld_indexable(buffer)(float,float,float,float) r7.x, r7.xxxx, t2.xyzw
  ftou r7.y, r7.y
  ld_indexable(buffer)(float,float,float,float) r7.y, r7.yyyy, t2.yxzw
  add r7.y, -r7.x, r7.y
  mad r6.w, r6.w, r7.y, r7.x
  mul r7.xyz, r6.wwww, cb4[16].xxxx
  add r6.w, r5.z, -cb0[24].y
  mul_sat r6.w, r6.w, cb0[24].w
  mul r8.x, r6.w, cb0[25].x
  round_ni r8.x, r8.x
  lt r8.y, r8.x, cb0[25].x
  add r8.z, r8.x, l(1.000000)
  movc r8.y, r8.y, r8.z, r8.x
  mad r6.w, r6.w, cb0[25].x, -r8.x
  ftou r8.x, r8.x
  ld_indexable(buffer)(float,float,float,float) r8.x, r8.xxxx, t3.xyzw
  ftou r8.y, r8.y
  ld_indexable(buffer)(float,float,float,float) r8.y, r8.yyyy, t3.yxzw
  add r8.y, -r8.x, r8.y
  mad r6.w, r6.w, r8.y, r8.x
  mul r7.w, r6.w, cb4[16].y
  mul r7.xyzw, r7.xyzw, r2.xyzw
  max r6.w, r1.w, l(0.000100)
  div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
  mul r8.xyz, r6.wwww, cb4[15].xyzx
  mad r6.xyz, r8.xyzx, cb1[0].xxxx, r6.xyzx
  max r6.w, cb4[14].x, l(0.000000)
  mad r6.w, cb1[0].x, r6.w, l(1.000000)
  div r6.xyz, r6.xyzx, r6.wwww
  mad r3.yzw, r6.xxyz, cb1[0].xxxx, r3.yyzw
  add r6.w, -cb4[17].x, cb4[17].y
  mad r6.w, r1.x, r6.w, cb4[17].x
  mad r4.z, cb1[0].x, r6.w, r4.z
  mov r6.w, r6.x
  mov r8.xy, r6.yzyy
else 
  uge r8.z, r0.x, r0.y
  and r0.z, r0.z, r8.z
  if_nz r0.z
    iadd r0.x, -r0.y, r0.x
    ige r9.xyzw, r0.xxxx, cb0[10].xyzw
    and r9.xyzw, r9.xyzw, l(1, 1, 1, 1)
    iadd r0.y, r9.y, r9.x
    iadd r0.y, r9.z, r0.y
    iadd r0.y, r9.w, r0.y
    ige r9.xyzw, r0.xxxx, cb0[11].xyzw
    and r9.xyzw, r9.xyzw, l(1, 1, 1, 1)
    iadd r0.z, r9.y, r9.x
    iadd r0.z, r9.z, r0.z
    iadd r0.z, r9.w, r0.z
    iadd r0.y, r0.z, r0.y
    iadd r0.x, r0.x, -cb0[r0.y + 12].w
    iadd r5.y, r0.x, cb3[0].y
    itof r0.x, r0.x
    mad r0.x, cb0[r0.y + 12].x, r0.x, cb0[r0.y + 12].y
    add r0.w, -r0.x, cb1[0].x
    mul r0.x, r0.x, cb1[0].y
    add r9.xyz, cb2[25].xyzx, -cb5[25].xyzx
    mad r9.xyz, r0.xxxx, r9.xyzx, cb5[25].xyzx
    add r10.xyzw, cb4[7].xyzw, -cb6[7].xyzw
    mad r10.xyzw, r0.xxxx, r10.xyzw, cb6[7].xyzw
    add r0.y, cb4[9].y, -cb6[9].y
    mad r0.x, r0.x, r0.y, cb6[9].y
    add r0.y, -cb4[0].x, cb4[0].y
    imul null, r11.x, vThreadID.x, l(0x0019660d)
    imul null, r11.y, cb0[9].z, l(0x0019660d)
    iadd r8.zw, r11.xxxy, l(0, 0, 0x3c6ef35f, 0x3c6ef35f)
    imad r11.xyzw, r8.zzzz, r8.zzzz, l(0x3c3c2745, 0x3c22c138, 0x3c095b2b, 0x3beff51e)
    imad r12.xyzw, r8.wwww, r11.xyzw, r8.zzzz
    imad r13.xyzw, r11.xyzw, r12.xyzw, r8.wwww
    imad r13.xyzw, r12.xyzw, r13.xyzw, r8.zzzz
    imad r11.xyzw, r12.xyzw, r13.xyzw, r11.xyzw
    ishr r11.xyzw, r11.xyzw, l(8, 8, 8, 8)
    and r11.xyzw, r11.xyzw, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff)
    utof r11.xyzw, r11.xyzw
    mul r0.y, r0.y, r11.x
    mad r5.x, r0.y, l(0.000000), cb4[0].x
    add r0.y, -cb4[0].w, cb4[1].x
    mul r0.y, r0.y, r11.y
    mad r1.z, r0.y, l(0.000000), cb4[0].w
    add r0.y, -cb4[1].z, cb4[1].w
    mul r0.y, r0.y, r11.z
    mad r0.y, r0.y, l(0.000000), cb4[1].z
    mul r3.x, r11.w, l(0.000000)
    mul r10.xyzw, r10.xyzw, cb4[6].xxxy
    mul r2.xyz, r10.xyzx, cb4[8].xyzx
    mul r0.z, r10.w, cb4[9].x
    mul r2.w, r0.x, r0.z
    add r10.xyz, -cb4[10].xyzx, cb4[11].xyzx
    imad r11.xyz, r8.zzzz, r8.zzzz, l(0x3bd68f11, 0x3bbd2904, 0x3ba3c2f7, 0)
    imad r12.xyz, r8.wwww, r11.xyzx, r8.zzzz
    imad r13.xyz, r11.xyzx, r12.xyzx, r8.wwww
    imad r13.xyz, r12.xyzx, r13.xyzx, r8.zzzz
    imad r11.xyz, r12.xyzx, r13.xyzx, r11.xyzx
    ishr r11.xyz, r11.xyzx, l(8, 8, 8, 0)
    and r11.xyz, r11.xyzx, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0)
    utof r11.xyz, r11.xyzx
    mul r10.xyz, r10.xyzx, r11.xyzx
    mad r10.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000), cb4[10].xyzx
    mul r10.xyz, r10.xyzx, cb4[13].xyzx
    mul r11.xyz, r10.yyyy, cb2[17].xyzx
    mad r10.xyw, r10.xxxx, cb2[16].xyxz, r11.xyxz
    mad r10.xyz, r10.zzzz, cb2[18].xyzx, r10.xywx
    max r0.x, r1.z, l(0.000010)
    add r0.z, r0.x, l(-0.000100)
    lt r5.w, r0.w, r0.z
    div r5.z, r0.w, r0.x
    add r0.x, r5.z, -cb0[23].y
    mul_sat r0.x, r0.x, cb0[23].w
    mul r0.z, r0.x, cb0[24].x
    round_ni r0.z, r0.z
    lt r8.z, r0.z, cb0[24].x
    add r8.w, r0.z, l(1.000000)
    movc r8.z, r8.z, r8.w, r0.z
    mad r0.x, r0.x, cb0[24].x, -r0.z
    ftou r0.z, r0.z
    ld_indexable(buffer)(float,float,float,float) r0.z, r0.zzzz, t2.yzxw
    ftou r8.z, r8.z
    ld_indexable(buffer)(float,float,float,float) r8.z, r8.zzzz, t2.yzxw
    add r8.z, -r0.z, r8.z
    mad r0.x, r0.x, r8.z, r0.z
    mul r11.xyz, r0.xxxx, cb4[16].xxxx
    add r0.x, r5.z, -cb0[24].y
    mul_sat r0.x, r0.x, cb0[24].w
    mul r0.z, r0.x, cb0[25].x
    round_ni r0.z, r0.z
    lt r8.z, r0.z, cb0[25].x
    add r8.w, r0.z, l(1.000000)
    movc r8.z, r8.z, r8.w, r0.z
    mad r0.x, r0.x, cb0[25].x, -r0.z
    ftou r0.z, r0.z
    ld_indexable(buffer)(float,float,float,float) r0.z, r0.zzzz, t3.yzxw
    ftou r8.z, r8.z
    ld_indexable(buffer)(float,float,float,float) r8.z, r8.zzzz, t3.yzxw
    add r8.z, -r0.z, r8.z
    mad r0.x, r0.x, r8.z, r0.z
    mul r11.w, r0.x, cb4[16].y
    mul r7.xyzw, r2.xyzw, r11.xyzw
    max r0.x, cb4[4].x, l(0.000100)
    div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
    mul r11.xyz, r0.xxxx, cb4[15].xyzx
    mad r10.xyz, r11.xyzx, r0.wwww, r10.xyzx
    max r0.x, cb4[14].x, l(0.000000)
    mad r0.x, r0.w, r0.x, l(1.000000)
    div r6.xyz, r10.xyzx, r0.xxxx
    mad r3.yzw, r6.xxyz, r0.wwww, r9.xxyz
    add r0.x, -cb4[17].x, cb4[17].y
    mad r0.x, r3.x, r0.x, cb4[17].x
    mad r4.z, r0.w, r0.x, r0.y
    mov r1.x, r3.x
    mov r1.w, cb4[4].x
    mov r6.w, r6.x
    mov r8.xy, r6.yzyy
    mov r1.y, l(1.000000)
    mov r4.xy, l(1.000000,1.000000,0,0)
    mov r4.w, r5.x
  else 
    mov r0.w, l(0)
    mov r7.xyzw, l(0,0,0,0)
    mov r2.xyzw, l(0,0,0,0)
    mov r3.xyzw, l(0,0,0,0)
    mov r8.xy, l(0,0,0,0)
    mov r1.xyzw, l(0,0,0,0)
    mov r4.xyzw, l(0,0,0,0)
    mov r6.xyzw, l(0,0,0,0)
    mov r5.xyzw, l(0,0,0,0)
  endif 
endif 
and r0.x, r5.w, l(1)
store_structured g0.x, vThreadIDInGroup.x, l(0), r0.x
sync_g_t
and r0.yz, vThreadIDInGroup.xxxx, l(0, 3, 15, 0)
if_z r0.y
  iadd r9.xyz, vThreadIDInGroup.xxxx, l(1, 2, 3, 0)
  ld_structured r0.y, r9.x, l(0), g0.xxxx
  iadd r0.y, r0.y, r0.x
  ld_structured r8.z, r9.y, l(0), g0.xxxx
  iadd r8.z, r0.y, r8.z
  ld_structured r8.w, r9.z, l(0), g0.xxxx
  iadd r8.w, r8.w, r8.z
  store_structured g0.x, vThreadIDInGroup.x, l(0), l(0)
  store_structured g0.x, r9.x, l(0), r0.x
  store_structured g0.x, r9.y, l(0), r0.y
  store_structured g0.x, r9.z, l(0), r8.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  store_structured g1.x, r0.x, l(0), r8.w
endif 
sync_g_t
if_z r0.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  ld_structured r0.y, r0.x, l(0), g1.xxxx
  iadd r9.xyz, r0.xxxx, l(1, 2, 3, 0)
  ld_structured r0.z, r9.x, l(0), g1.xxxx
  iadd r0.z, r0.z, r0.y
  ld_structured r8.z, r9.y, l(0), g1.xxxx
  iadd r8.z, r0.z, r8.z
  ld_structured r8.w, r9.z, l(0), g1.xxxx
  iadd r8.w, r8.w, r8.z
  store_structured g1.x, r0.x, l(0), l(0)
  store_structured g1.x, r9.x, l(0), r0.y
  store_structured g1.x, r9.y, l(0), r0.z
  store_structured g1.x, r9.z, l(0), r8.z
  ushr r0.x, r0.x, l(2)
  store_structured g2.x, r0.x, l(0), r8.w
endif 
sync_g_t
if_z vThreadIDInGroup.x
  ld_structured r0.x, l(0), l(0), g2.xxxx
  ld_structured r0.y, l(1), l(0), g2.xxxx
  iadd r0.y, r0.y, r0.x
  store_structured g2.x, l(0), l(0), l(0)
  store_structured g2.x, l(1), l(0), r0.x
  imm_atomic_iadd r9.x, u2, cb0[23].x, r0.y
  store_raw g3.x, l(0), r9.x
endif 
sync_g_t
if_nz r5.w
  ld_raw r0.x, l(0), g3.xxxx
  ushr r0.yz, vThreadIDInGroup.xxxx, l(0, 4, 2, 0)
  ld_structured r0.y, r0.y, l(0), g2.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, r0.z, l(0), g1.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, vThreadIDInGroup.x, l(0), g0.xxxx
  iadd r0.x, r0.y, r0.x
  iadd r0.y, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.yyyy, r0.wwww
  iadd r0.z, r0.x, cb0[21].z
  iadd r0.z, r0.z, cb0[20].y
  store_uav_typed u1.xyzw, r0.zzzz, r7.xxxx
  ishl r9.xyzw, cb0[21].zzzz, l(1, 2, 3, 4)
  iadd r9.xyzw, r0.xxxx, r9.xyzw
  iadd r9.xyzw, r9.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r9.xxxx, r7.yyyy
  imad r10.xyzw, l(3, 5, 6, 7), cb0[21].zzzz, r0.xxxx
  iadd r10.xyzw, r10.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r10.xxxx, r7.zzzz
  store_uav_typed u1.xyzw, r9.yyyy, r7.wwww
  store_uav_typed u1.xyzw, r10.yyyy, r2.xxxx
  store_uav_typed u1.xyzw, r10.zzzz, r2.yyyy
  store_uav_typed u1.xyzw, r10.wwww, r2.zzzz
  store_uav_typed u1.xyzw, r9.zzzz, r2.wwww
  imad r2.xyzw, l(9, 10, 11, 12), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r1.xxxx
  store_uav_typed u1.xyzw, r2.yyyy, r1.zzzz
  store_uav_typed u1.xyzw, r2.zzzz, r1.wwww
  store_uav_typed u1.xyzw, r2.wwww, r3.xxxx
  imad r2.xyzw, l(13, 14, 15, 17), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r5.zzzz
  store_uav_typed u1.xyzw, r2.yyyy, r3.yyyy
  store_uav_typed u1.xyzw, r2.zzzz, r3.zzzz
  store_uav_typed u1.xyzw, r9.wwww, r3.wwww
  store_uav_typed u1.xyzw, r2.wwww, r6.wwww
  imad r2.xyzw, l(18, 19, 20, 21), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r8.xxxx
  store_uav_typed u1.xyzw, r2.yyyy, r8.yyyy
  store_uav_typed u1.xyzw, r2.zzzz, r1.yyyy
  store_uav_typed u1.xyzw, r2.wwww, r4.xxxx
  imad r1.xyzw, l(22, 23, 24, 25), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r4.yyyy
  store_uav_typed u1.xyzw, r1.yyyy, r4.zzzz
  store_uav_typed u1.xyzw, r1.zzzz, r4.wwww
  store_uav_typed u1.xyzw, r1.wwww, r5.xxxx
  store_uav_typed u0.xyzw, r0.yyyy, r5.yyyy
  imad r0.xyz, l(26, 27, 28, 0), cb0[21].zzzz, r0.xxxx
  iadd r0.xyz, r0.xyzx, cb0[20].yyyy
  store_uav_typed u1.xyzw, r0.xxxx, r6.xxxx
  store_uav_typed u1.xyzw, r0.yyyy, r6.yyyy
  store_uav_typed u1.xyzw, r0.zzzz, r6.zzzz
endif 
ret 
// Approximately 327 instruction slots used
